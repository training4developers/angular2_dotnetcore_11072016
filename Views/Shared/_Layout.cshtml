<!DOCTYPE html>

<html lang="en">
	
	<head>
		<title>Angular 2 + .NET Core Demo Application [t4d.io]</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
		<meta http-equiv="x-ua-compatible" content="ie=edge">
		<base href="/">	
	</head>

	<body>
		@RenderBody()
		<script src="js/polyfills.js"></script>
		<script src="js/vendor.js"></script>
		<script src="js/app.js"></script>

		<script>

			// 'use strict';

			// const daddy = new Promise(function liza(resolve, reject) {

			// 	setTimeout(function() {
			// 		resolve('she is madly in love with you, you are man of her dreams, and she is luckiest woman in the world to marry you');
			// 	}, 2000);

			// });

			// daddy.then(function(results) {
			// 	console.log(results);
			// 	console.log('yay she is going to marry me!');

			// 	// return new Promise(function bachelorParty(resolve, reject) {
			// 	// 	setTimeout(function() {
			// 	// 		resolve('party is planned');
			// 	// 	}, 2000)
			// 	// });

			// 	//return 'party is planned';
			// 	//throw Error('party location not available');

			// 	return Promise.reject('party location not available');

			// }).then(function(results) {
			// 	console.log('test');
			// 	console.log(results);

			// }).catch(function(results) {
			// 	console.log(results);
			// 	console.log('daddy is going to sign up for eharmony');
			// });

			// console.log('waiting');


			// // function doIt(fn) {
			// // 	var y = function() { };
			// // 	fn(y);
			// // }

			// // doIt(function(t) {
			// // 	t();
			// // 	console.log('did it');
			// // });

		</script>

		<script>

			// 'use script';

			// const p1 = new Promise(resolve => setTimeout(() => resolve('a'), 2000));
			// const p2 = new Promise(resolve => setTimeout(() => resolve('b'), 4000));
			// const p3 = new Promise((resolve, reject) => setTimeout(() => reject('c'), 6000));
			// const p4 = new Promise(resolve => setTimeout(() => resolve('d'), 8000));

			// p1.then(results => console.log(results));
			// p2.then(results => console.log(results));
			// p3.then(results => console.log(results)).catch(err => console.log(err, 'rejected'));
			// p4.then(results => console.log(results));

			// Promise.all([p1,p2,p3,p4]).then(function() {
			// 	console.log('all done');
			// }).catch(err => {
			// 	console.log('one failed');
			// 	console.log(err);
			// });


		</script>


	</body>

</html>		